# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ContinuewatchingContentIdBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, new_last_watched_minute: int=None):  # noqa: E501
        """ContinuewatchingContentIdBody - a model defined in Swagger

        :param new_last_watched_minute: The new_last_watched_minute of this ContinuewatchingContentIdBody.  # noqa: E501
        :type new_last_watched_minute: int
        """
        self.swagger_types = {
            'new_last_watched_minute': int
        }

        self.attribute_map = {
            'new_last_watched_minute': 'new_last_watched_minute'
        }
        self._new_last_watched_minute = new_last_watched_minute

    @classmethod
    def from_dict(cls, dikt) -> 'ContinuewatchingContentIdBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The continuewatching_content_id_body of this ContinuewatchingContentIdBody.  # noqa: E501
        :rtype: ContinuewatchingContentIdBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def new_last_watched_minute(self) -> int:
        """Gets the new_last_watched_minute of this ContinuewatchingContentIdBody.

        The new minute where the user stopped watching  # noqa: E501

        :return: The new_last_watched_minute of this ContinuewatchingContentIdBody.
        :rtype: int
        """
        return self._new_last_watched_minute

    @new_last_watched_minute.setter
    def new_last_watched_minute(self, new_last_watched_minute: int):
        """Sets the new_last_watched_minute of this ContinuewatchingContentIdBody.

        The new minute where the user stopped watching  # noqa: E501

        :param new_last_watched_minute: The new_last_watched_minute of this ContinuewatchingContentIdBody.
        :type new_last_watched_minute: int
        """
        if new_last_watched_minute is None:
            raise ValueError("Invalid value for `new_last_watched_minute`, must not be `None`")  # noqa: E501

        self._new_last_watched_minute = new_last_watched_minute
